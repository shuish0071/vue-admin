{"remainingRequest":"D:\\Program Files\\python_project\\vue\\vue4-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program Files\\python_project\\vue\\vue4-admin\\src\\views\\Login\\index.vue?vue&type=style&index=0&id=aeba673c&lang=scss&scoped=true&","dependencies":[{"path":"D:\\Program Files\\python_project\\vue\\vue4-admin\\src\\views\\Login\\index.vue","mtime":1591870165093},{"path":"D:\\Program Files\\python_project\\vue\\vue4-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program Files\\python_project\\vue\\vue4-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Program Files\\python_project\\vue\\vue4-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Program Files\\python_project\\vue\\vue4-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program Files\\python_project\\vue\\vue4-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Program Files\\python_project\\vue\\vue4-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI2xvZ2luIHsNCiAgLyp2aCDku6PooajmtY/op4jlmajlj6/op4bljLrlpKflsI/vvIwxMDDku6PooagxMDAlKi8NCiAgaGVpZ2h0OiAxMDB2aDsNCiAgYmFja2dyb3VuZC1jb2xvcjogIzM0NGE1ZjsNCn0NCg0KLmxvZ2luLXdyYXAgew0KICB3aWR0aDogMzMwcHg7DQogIG1hcmdpbjogYXV0bzsNCn0NCg0KLm1lbnUtdGFiIHsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KDQogIGxpIHsNCiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogICAgd2lkdGg6IDg4cHg7DQogICAgbGluZS1oZWlnaHQ6IDM2cHg7DQogICAgZm9udC1zaXplOiAxNHB4Ow0KICAgIGNvbG9yOiAjZmZmOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogIH0NCg0KICAuY3VycmVudCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpOw0KICB9DQp9DQoNCi5sb2dpbi1mb3JtIHsNCiAgbWFyZ2luLXRvcDogMjlweDsNCg0KICBsYWJlbCB7DQogICAgZGlzcGxheTogYmxvY2s7DQogICAgbWFyZ2luLWJvdHRvbTogM3B4Ow0KDQogICAgZm9udC1zaXplOiAxNHB4Ow0KICAgIGNvbG9yOiAjZmZmOw0KICB9DQoNCiAgLml0ZW0tZm9ybSB7DQogICAgbWFyZ2luLWJvdHRvbTogMTNweDsNCiAgfQ0KDQogIC5ibG9jayB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgZGlzcGxheTogYmxvY2s7DQogIH0NCg0KICAubG9naW4tYnRuIHsNCiAgICBtYXJnaW4tdG9wOiAxOXB4Ow0KICB9DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0WA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Login","sourcesContent":["<template>\r\n  <div id=\"login\">\r\n    <div class=\"login-wrap\">\r\n      <ul class=\"menu-tab\">\r\n        <li\r\n          :class=\"{ current: item.current }\"\r\n          @click=\"toggleMenu(item)\"\r\n          v-for=\"item in menuTab\"\r\n          :key=\"item.id\"\r\n        >\r\n          {{ item.txt }}\r\n        </li>\r\n      </ul>\r\n      <!--      表单 start-->\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        status-icon\r\n        :rules=\"rules\"\r\n        ref=\"loginForm\"\r\n        class=\"login-form\"\r\n        size=\"medium\"\r\n      >\r\n        <el-form-item prop=\"username\" class=\"item-form\">\r\n          <label for=\"username\">邮箱</label>\r\n          <el-input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            v-model=\"ruleForm.username\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"password\" class=\"item-form\">\r\n          <label for=\"passowrd\">密码</label>\r\n          <el-input\r\n            id=\"passowrd\"\r\n            type=\"password\"\r\n            v-model=\"ruleForm.password\"\r\n            autocomplete=\"off\"\r\n            minlength=\"6\"\r\n            maxlength=\"20\"\r\n          ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item\r\n          prop=\"passwords\"\r\n          class=\"item-form\"\r\n          v-show=\"model === 'register'\"\r\n        >\r\n          <label for=\"passwords\">重复密码</label>\r\n          <el-input\r\n            id=\"passwords\"\r\n            type=\"password\"\r\n            v-model=\"ruleForm.passwords\"\r\n            autocomplete=\"off\"\r\n            minlength=\"6\"\r\n            maxlength=\"20\"\r\n          ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"code\" class=\"item-form\">\r\n          <label for=\"code\">验证码</label>\r\n          <el-row :gutter=\"10\">\r\n            <el-col :span=\"15\">\r\n              <el-input\r\n                id=\"code\"\r\n                v-model.number=\"ruleForm.code\"\r\n                minlength=\"6\"\r\n                maxlength=\"6\"\r\n              ></el-input>\r\n            </el-col>\r\n            <el-col :span=\"9\">\r\n              <el-button\r\n                type=\"success\"\r\n                class=\"block\"\r\n                @click=\"getSms()\"\r\n                :disabled=\"codeButton.status\"\r\n                >{{ codeButton.text }}\r\n              </el-button>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button\r\n            type=\"danger\"\r\n            @click=\"submitForm('loginForm')\"\r\n            class=\"login-btn block\"\r\n            :disabled=\"loginButtonStatus\"\r\n            >{{ model === \"login\" ? \"登录\" : \"注册\" }}\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 使用export default时，文件import 不需要花括号{},\r\n// 但不能同时存在多个default\r\nimport {\r\n  validate_Email,\r\n  validate_Password,\r\n  validate_code\r\n} from \"@/utils/validate\";\r\nimport { reactive, ref, onMounted } from \"@vue/composition-api\";\r\nimport { GetSms, Register, Login } from \"@/api/login\";\r\nimport sha1 from \"js-sha1\";\r\n\r\nexport default {\r\n  name: \"login\",\r\n  setup(props, context) {\r\n    let validateUsername = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入用户名\"));\r\n      } else if (validate_Email(value)) {\r\n        callback(new Error(\"用户名格式有误\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    // 验证密码\r\n    let validatePassword = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入密码\"));\r\n      } else if (validate_Password(value)) {\r\n        callback(new Error(\"密码为6至20位的数字+字母\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    // 验证重复密码\r\n    let validatePasswords = (rule, value, callback) => {\r\n      // 如果模块值为login，则直接通过\r\n      // v-if相比v-show，多消耗资源进行页面渲染\r\n      if (model.value === \"login\") {\r\n        callback();\r\n      } else if (value === \"\") {\r\n        callback(new Error(\"请再次输入密码\"));\r\n      } else if (value !== ruleForm.password) {\r\n        callback(new Error(\"两次输入的密码不同\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    // 校验6位验证码\r\n    let validateCode = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入验证码\"));\r\n      } else if (validate_code(value)) {\r\n        callback(new Error(\"密码为6位的数字或字母\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    // 声明数据\r\n    // 存放data数据、生命周期、自定义函数\r\n    // reactive 处理对象类型数据\r\n    const menuTab = reactive([\r\n      { txt: \"登录\", current: true, type: \"login\" },\r\n      { txt: \"注册\", current: false, type: \"register\" }\r\n    ]);\r\n    // model 处理基础类型数据，注意取值方法 model.value\r\n    const model = ref(\"login\");\r\n    // 登录按钮禁用状态\r\n    const loginButtonStatus = ref(true);\r\n    // 验证码按钮状态\r\n    const codeButton = reactive({\r\n      status: false,\r\n      text: \"获取验证码\"\r\n    });\r\n    // 倒计时变量\r\n    const timer = ref(null);\r\n    // 表单绑定数据，对象类型使用reactive赋值\r\n    const ruleForm = reactive({\r\n      username: \"\",\r\n      password: \"\",\r\n      passwords: \"\",\r\n      code: \"\"\r\n    });\r\n    // 表单的验证\r\n    const rules = reactive({\r\n      username: [{ validator: validateUsername, trigger: \"blur\" }],\r\n      password: [{ validator: validatePassword, trigger: \"blur\" }],\r\n      passwords: [{ validator: validatePasswords, trigger: \"blur\" }],\r\n      code: [{ validator: validateCode, trigger: \"blur\" }]\r\n    });\r\n    // 声明函数\r\n    // 切换模块\r\n    const toggleMenu = data => {\r\n      // forEach 为js 语法，遍历数组menuTab，将current 设置为false\r\n      // 由于每次点击都先将current设置为false，再将鼠标点击的设为true\r\n      // 实现了点击哪个，哪个高光，另一个非高光\r\n      menuTab.forEach(elem => {\r\n        elem.current = false;\r\n      });\r\n      data.current = true;\r\n      // 修改模块值，函数内的方法与取值不用加this，赋值为.value 形式\r\n      model.value = data.type;\r\n      resetFormData();\r\n      clearCountDown();\r\n    };\r\n    // 清除表单数据\r\n    const resetFormData = () => {\r\n      // 重置表单\r\n      context.refs.loginForm.resetFields();\r\n    };\r\n    // 更新按钮状态\r\n    const updateButtonStatus = params => {\r\n      // 将获取验证码按钮设置为禁用状态\r\n      codeButton.status = params.status;\r\n      codeButton.text = params.text;\r\n    };\r\n    // 提交表单\r\n    const getSms = () => {\r\n      // 进行提示\r\n      if (!ruleForm.username) {\r\n        context.root.$message.error(\"邮箱不能为空！\");\r\n        return false;\r\n      }\r\n      if (validate_Email(ruleForm.username)) {\r\n        context.root.$message.error(\"邮箱格式有误，请重新输入！\");\r\n        return false;\r\n      }\r\n      // 获取验证码，测试账号 1@1.com asd123\r\n      let requestData = {\r\n        username: ruleForm.username,\r\n        module: model.value\r\n      };\r\n      // 将获取验证码按钮设置为禁用状态\r\n      updateButtonStatus({ status: true, text: \"发送中\" });\r\n      GetSms(requestData)\r\n        .then(response => {\r\n          let data = response.data;\r\n          context.root.$message({\r\n            message: data.message,\r\n            type: \"success\"\r\n          });\r\n          // 启用登录或注册按钮\r\n          loginButtonStatus.value = false;\r\n          // 调用定时器，倒计时60秒\r\n          countDown(60);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    };\r\n\r\n    // 提交表单\r\n    const submitForm = formName => {\r\n      context.refs[formName].validate(valid => {\r\n        if (valid) {\r\n          // 表单验证通过，三元运算，true 则login()\r\n          model.value === \"login\" ? login() : register();\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    };\r\n\r\n    // 登录\r\n    const login = () => {\r\n      let requestData = {\r\n        username: ruleForm.username,\r\n        password: sha1(ruleForm.password),\r\n        code: ruleForm.code,\r\n        module: \"login\"\r\n      };\r\n      console.log(requestData.password);\r\n      Login(requestData)\r\n        .then(response => {\r\n          let data = response.data;\r\n          console.log(\"登录成功\");\r\n          context.root.$message({\r\n            message: data.message,\r\n            type: \"success\"\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    // 注册\r\n    const register = () => {\r\n      let requestData = {\r\n        username: ruleForm.username,\r\n        password: sha1(ruleForm.password),\r\n        code: ruleForm.code,\r\n        module: \"register\"\r\n      };\r\n      // 注册接口\r\n      Register(requestData)\r\n        .then(response => {\r\n          console.log(response);\r\n          let data = response.data;\r\n          context.root.$message({\r\n            message: data.message,\r\n            type: \"success\"\r\n          });\r\n          // 模拟注册成功\r\n          toggleMenu(menuTab[0]);\r\n          clearCountDown();\r\n        })\r\n        .catch(error => {\r\n          // 失败执行的代码\r\n          console.log(error);\r\n        });\r\n    };\r\n    // 倒计时\r\n    const countDown = number => {\r\n      // 判断定时器是否存在，存在则清除\r\n      if (timer.value) {\r\n        clearInterval(timer.value);\r\n      }\r\n      // setTimeout 只执行一次\r\n      // setInterval 不断执行，需要条件才会停止\r\n      let time = number;\r\n      timer.value = setInterval(() => {\r\n        time--;\r\n        if (time === 0) {\r\n          clearInterval(timer.value);\r\n          updateButtonStatus({ status: false, text: \"再次获取\" });\r\n        } else {\r\n          codeButton.text = `倒计时${time}秒`; // es5\r\n        }\r\n      }, 1000);\r\n    };\r\n    // 清除倒计时\r\n    const clearCountDown = () => {\r\n      // 还原验证码按钮默认状态\r\n      updateButtonStatus({ status: false, text: \"获取验证码\" });\r\n      // 清除倒计时\r\n      clearInterval(timer.value);\r\n    };\r\n\r\n    // 生命周期\r\n    onMounted(() => {});\r\n    // 只有写在return中，函数、变量才会被用到\r\n    return {\r\n      menuTab,\r\n      model,\r\n      ruleForm,\r\n      rules,\r\n      loginButtonStatus,\r\n      codeButton,\r\n      timer,\r\n      toggleMenu,\r\n      resetFormData,\r\n      updateButtonStatus,\r\n      submitForm,\r\n      getSms,\r\n      clearCountDown\r\n    };\r\n  },\r\n  created() {},\r\n  mounted() {},\r\n  methods: {}\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#login {\r\n  /*vh 代表浏览器可视区大小，100代表100%*/\r\n  height: 100vh;\r\n  background-color: #344a5f;\r\n}\r\n\r\n.login-wrap {\r\n  width: 330px;\r\n  margin: auto;\r\n}\r\n\r\n.menu-tab {\r\n  text-align: center;\r\n\r\n  li {\r\n    display: inline-block;\r\n    width: 88px;\r\n    line-height: 36px;\r\n    font-size: 14px;\r\n    color: #fff;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .current {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n}\r\n\r\n.login-form {\r\n  margin-top: 29px;\r\n\r\n  label {\r\n    display: block;\r\n    margin-bottom: 3px;\r\n\r\n    font-size: 14px;\r\n    color: #fff;\r\n  }\r\n\r\n  .item-form {\r\n    margin-bottom: 13px;\r\n  }\r\n\r\n  .block {\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n\r\n  .login-btn {\r\n    margin-top: 19px;\r\n  }\r\n}\r\n</style>\r\n"]}]}